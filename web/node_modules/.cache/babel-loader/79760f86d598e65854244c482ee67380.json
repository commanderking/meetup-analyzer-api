{"ast":null,"code":"import _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BACKEND_BASE_URL = \"localhost:5000\";\nvar ATTENDANCE_ENDPOINT = \"http://\".concat(BACKEND_BASE_URL, \"/events\"); // export const getEvents = async () => {\n//     try {\n//       console.log(\"in events\");\n//       const data = await fetch(EVENT_ENDPOINT, {\n//         method: \"GET\"\n//       });\n//       console.log(\"fetching\");\n//       console.log(\"data\", data);\n//       const dataJson = await data.json();\n//       console.log(\"dataJson\", dataJson);\n//       return dataJson;\n//     } catch (err) {\n//       console.log(\"err\", err);\n//     }\n//   };\n\nexport var getAttendanceForEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(eventIds) {\n    var data, dataJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(ATTENDANCE_ENDPOINT, {\n              method: \"POST\",\n              body: JSON.stringify({\n                eventIds: eventIds\n              })\n            });\n\n          case 3:\n            data = _context.sent;\n            _context.next = 6;\n            return data.json();\n\n          case 6:\n            dataJson = _context.sent;\n            return _context.abrupt(\"return\", dataJson);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"err\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function getAttendanceForEvents(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/requests/attendanceRequest.ts"],"names":["BACKEND_BASE_URL","ATTENDANCE_ENDPOINT","getAttendanceForEvents","eventIds","fetch","method","body","JSON","stringify","data","json","dataJson","console","log"],"mappings":";;AAAA,IAAMA,gBAAgB,GAAG,gBAAzB;AACA,IAAMC,mBAAmB,oBAAaD,gBAAb,YAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAME,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEfC,KAAK,CAACH,mBAAD,EAAsB;AAC5CI,cAAAA,MAAM,EAAE,MADoC;AAE5CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,gBAAAA,QAAQ,EAARA;AADmB,eAAf;AAFsC,aAAtB,CAFU;;AAAA;AAE5BM,YAAAA,IAF4B;AAAA;AAAA,mBASXA,IAAI,CAACC,IAAL,EATW;;AAAA;AAS5BC,YAAAA,QAT4B;AAAA,6CAU3BA,QAV2B;;AAAA;AAAA;AAAA;AAYlCC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AAZkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBX,sBAAsB;AAAA;AAAA;AAAA,GAA5B","sourcesContent":["const BACKEND_BASE_URL = \"localhost:5000\";\nconst ATTENDANCE_ENDPOINT = `http://${BACKEND_BASE_URL}/events`;\n\n// export const getEvents = async () => {\n//     try {\n//       console.log(\"in events\");\n//       const data = await fetch(EVENT_ENDPOINT, {\n//         method: \"GET\"\n//       });\n\n//       console.log(\"fetching\");\n//       console.log(\"data\", data);\n\n//       const dataJson = await data.json();\n//       console.log(\"dataJson\", dataJson);\n//       return dataJson;\n//     } catch (err) {\n//       console.log(\"err\", err);\n//     }\n//   };\n\nexport const getAttendanceForEvents = async (eventIds: string[]) => {\n  try {\n    const data = await fetch(ATTENDANCE_ENDPOINT, {\n      method: \"POST\",\n      body: JSON.stringify({\n        eventIds\n      })\n    });\n\n    const dataJson = await data.json();\n    return dataJson;\n  } catch (err) {\n    console.log(\"err\", err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}