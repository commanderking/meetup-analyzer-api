{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/singleMeetingAnalysis/components/SignUpSummary.tsx\";\nimport React, { useState } from \"react\";\nimport SignUpAreaChart from \"./SignUpAreaChart\";\nimport _ from \"lodash\";\nimport { ButtonGroup, Button } from \"reactstrap\";\nimport { getSignupsPerDay, getSignupsAccumulated } from \"../SingleMeetingAnalysisUtils\";\n\nvar SignupSummary = function SignupSummary(_ref) {\n  var attendees = _ref.attendees,\n      eventDate = _ref.eventDate;\n  console.log(\"react\", React);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAccumulatedSignups = _useState2[0],\n      setShowAccumulatedSignups = _useState2[1];\n\n  var signupDataAccumulated = getSignupsAccumulated(attendees, eventDate);\n  var signupDataDaily = getSignupsPerDay(attendees, eventDate);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Accumulated\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Daily\")), showAccumulatedSignups ? React.createElement(SignUpAreaChart, {\n    data: _.values(signupDataAccumulated),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(SignUpAreaChart, {\n    data: _.values(signupDataDaily),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default SignupSummary;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/singleMeetingAnalysis/components/SignUpSummary.tsx"],"names":["React","useState","SignUpAreaChart","_","ButtonGroup","Button","getSignupsPerDay","getSignupsAccumulated","SignupSummary","attendees","eventDate","console","log","showAccumulatedSignups","setShowAccumulatedSignups","signupDataAccumulated","signupDataDaily","values"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,YAApC;AAEA,SACEC,gBADF,EAEEC,qBAFF,QAGO,+BAHP;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAMhB;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;;AADI,kBAEwDC,QAAQ,CAAC,IAAD,CAFhE;AAAA;AAAA,MAEGY,sBAFH;AAAA,MAE2BC,yBAF3B;;AAIJ,MAAMC,qBAAqB,GAAGR,qBAAqB,CAACE,SAAD,EAAYC,SAAZ,CAAnD;AACA,MAAMM,eAAe,GAAGV,gBAAgB,CAACG,SAAD,EAAYC,SAAZ,CAAxC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,EAKGG,sBAAsB,GACrB,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,CAAC,CAACc,MAAF,CAASF,qBAAT,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB,GAGrB,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEZ,CAAC,CAACc,MAAF,CAASD,eAAT,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAaD,CA1BD;;AA4BA,eAAeR,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { AttendeeData } from \"../SingleMeetupTypes\";\nimport SignUpAreaChart from \"./SignUpAreaChart\";\nimport _ from \"lodash\";\nimport { ButtonGroup, Button } from \"reactstrap\";\n\nimport {\n  getSignupsPerDay,\n  getSignupsAccumulated\n} from \"../SingleMeetingAnalysisUtils\";\n\nconst SignupSummary = ({\n  attendees,\n  eventDate\n}: {\n  attendees: AttendeeData[];\n  eventDate: string;\n}) => {\n  console.log(\"react\", React);\n  const [showAccumulatedSignups, setShowAccumulatedSignups] = useState(true);\n\n  const signupDataAccumulated = getSignupsAccumulated(attendees, eventDate);\n  const signupDataDaily = getSignupsPerDay(attendees, eventDate);\n\n  return (\n    <div>\n      <ButtonGroup>\n        <Button>Accumulated</Button>\n        <Button>Daily</Button>\n      </ButtonGroup>\n      {showAccumulatedSignups ? (\n        <SignUpAreaChart data={_.values(signupDataAccumulated)} />\n      ) : (\n        <SignUpAreaChart data={_.values(signupDataDaily)} />\n      )}\n    </div>\n  );\n};\n\nexport default SignupSummary;\n"]},"metadata":{},"sourceType":"module"}