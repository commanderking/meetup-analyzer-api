{"ast":null,"code":"export var getPredictedAttendanceFromMembersWithHistory = function getPredictedAttendanceFromMembersWithHistory(attendanceHistory) {\n  return attendanceHistory.memberAttendanceHistory.reduce(function (acc, attendee) {\n    return acc + attendee.attended / attendee.rsvped;\n  }, 0);\n};\nexport var getFirstTimeAttendeeRate = function getFirstTimeAttendeeRate(attendanceHistory) {\n  var _attendanceHistory$si = attendanceHistory.singleAttendanceCountAndRSVPs,\n      attended = _attendanceHistory$si.attended,\n      rsvped = _attendanceHistory$si.rsvped;\n  return attended / rsvped;\n};\nexport var getPredictedAttendanceCount = function getPredictedAttendanceCount(attendanceHistory, attendeeIds) {\n  var firstTimeAttendeeRate = getFirstTimeAttendeeRate(attendanceHistory);\n  var regulars = attendanceHistory.memberAttendanceHistory.length;\n  var firstTimers = attendeeIds.length - regulars;\n  return Math.round(firstTimers * firstTimeAttendeeRate + getPredictedAttendanceFromMembersWithHistory(attendanceHistory));\n};","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/attendancePredictorUtils.ts"],"names":["getPredictedAttendanceFromMembersWithHistory","attendanceHistory","memberAttendanceHistory","reduce","acc","attendee","attended","rsvped","getFirstTimeAttendeeRate","singleAttendanceCountAndRSVPs","getPredictedAttendanceCount","attendeeIds","firstTimeAttendeeRate","regulars","length","firstTimers","Math","round"],"mappings":"AAUA,OAAO,IAAMA,4CAA4C,GAAG,SAA/CA,4CAA+C,CAC1DC,iBAD0D,EAE/C;AACX,SAAOA,iBAAiB,CAACC,uBAAlB,CAA0CC,MAA1C,CACL,UAACC,GAAD,EAAcC,QAAd,EAAoD;AAClD,WAAOD,GAAG,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACE,MAA1C;AACD,GAHI,EAIL,CAJK,CAAP;AAMD,CATM;AAWP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CACtCP,iBADsC,EAE3B;AAAA,8BACkBA,iBAAiB,CAACQ,6BADpC;AAAA,MACHH,QADG,yBACHA,QADG;AAAA,MACOC,MADP,yBACOA,MADP;AAGX,SAAOD,QAAQ,GAAGC,MAAlB;AACD,CANM;AAQP,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CACzCT,iBADyC,EAEzCU,WAFyC,EAG9B;AACX,MAAMC,qBAAqB,GAAGJ,wBAAwB,CAACP,iBAAD,CAAtD;AAEA,MAAMY,QAAQ,GAAGZ,iBAAiB,CAACC,uBAAlB,CAA0CY,MAA3D;AACA,MAAMC,WAAW,GAAGJ,WAAW,CAACG,MAAZ,GAAqBD,QAAzC;AAEA,SAAOG,IAAI,CAACC,KAAL,CACLF,WAAW,GAAGH,qBAAd,GACEZ,4CAA4C,CAACC,iBAAD,CAFzC,CAAP;AAID,CAbM","sourcesContent":["import {\n  AttendanceHistory,\n  MemberAttendanceHistory\n} from \"requests/attendanceHistoryTypes\";\n\ntype AttendanceHistoryCount = {\n  attended: number;\n  rsvped: number;\n};\n\nexport const getPredictedAttendanceFromMembersWithHistory = (\n  attendanceHistory: AttendanceHistory\n): number => {\n  return attendanceHistory.memberAttendanceHistory.reduce(\n    (acc: number, attendee: MemberAttendanceHistory) => {\n      return acc + attendee.attended / attendee.rsvped;\n    },\n    0\n  );\n};\n\nexport const getFirstTimeAttendeeRate = (\n  attendanceHistory: AttendanceHistory\n): number => {\n  const { attended, rsvped } = attendanceHistory.singleAttendanceCountAndRSVPs;\n\n  return attended / rsvped;\n};\n\nexport const getPredictedAttendanceCount = (\n  attendanceHistory: AttendanceHistory,\n  attendeeIds: string[]\n): number => {\n  const firstTimeAttendeeRate = getFirstTimeAttendeeRate(attendanceHistory);\n\n  const regulars = attendanceHistory.memberAttendanceHistory.length;\n  const firstTimers = attendeeIds.length - regulars;\n\n  return Math.round(\n    firstTimers * firstTimeAttendeeRate +\n      getPredictedAttendanceFromMembersWithHistory(attendanceHistory)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}