{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/singleMeetingAnalysis/components/AttendanceBySignupDate.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n          display: grid;\\n          grid-template-columns: 2fr 3fr;\\n        \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        width: 800px;\\n        margin: auto;\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { getAttendanceRateBySignupDate, getFirstWeekSignups } from \"features/singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\nimport PercentageProgressBar from \"./PercentageProgressBar\";\nimport _ from \"lodash\";\n/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\n\nvar AttendanceBySignupDate = function AttendanceBySignupDate(_ref) {\n  var attendees = _ref.attendees,\n      eventDate = _ref.eventDate;\n  var rateByDate = getAttendanceRateBySignupDate(attendees, eventDate);\n  console.log(\"attendanceRateByDate\", rateByDate);\n  console.log(!_.isEmpty(rateByDate));\n  var lastDay = _.size(rateByDate) - 1;\n  var lastDayKey = lastDay.toString();\n  var secondLastDayKey = (lastDay - 1).toString();\n  var firstWeek = getFirstWeekSignups(rateByDate);\n  return jsx(\"div\", {\n    css: css(_templateObject()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Attendance By Signup Date\"), jsx(\"div\", {\n    id: \"AttendeePercentagesByMeetupRegistrationDate\",\n    css: css(_templateObject2()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, !_.isEmpty(rateByDate) && jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, jsx(PercentageProgressBar, {\n    text: \"First Day\",\n    numerator: rateByDate[\"0\"].attended,\n    denominator: rateByDate[\"0\"].rsvped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), jsx(PercentageProgressBar, {\n    text: \"Second Day\",\n    numerator: rateByDate[\"1\"].attended,\n    denominator: rateByDate[\"1\"].rsvped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), jsx(PercentageProgressBar, {\n    text: \"Day Before\",\n    numerator: rateByDate[secondLastDayKey].attended,\n    denominator: rateByDate[secondLastDayKey].rsvped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), jsx(PercentageProgressBar, {\n    text: \"Last Day\",\n    numerator: rateByDate[lastDayKey].attended,\n    denominator: rateByDate[lastDayKey].rsvped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), firstWeek ? jsx(PercentageProgressBar, {\n    text: \"First Week\",\n    numerator: firstWeek.attended,\n    denominator: firstWeek.rsvped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Not enough days for first week data \"))));\n};\n\nexport default AttendanceBySignupDate;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/singleMeetingAnalysis/components/AttendanceBySignupDate.tsx"],"names":["React","getAttendanceRateBySignupDate","getFirstWeekSignups","PercentageProgressBar","_","css","jsx","AttendanceBySignupDate","attendees","eventDate","rateByDate","console","log","isEmpty","lastDay","size","lastDayKey","toString","secondLastDayKey","firstWeek","attended","rsvped"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,6BADF,EAEEC,mBAFF,QAGO,2DAHP;AAKA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;;AAMA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAAqC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAClE,MAAMC,UAAU,GAAGT,6BAA6B,CAACO,SAAD,EAAYC,SAAZ,CAAhD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,UAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACR,CAAC,CAACS,OAAF,CAAUH,UAAV,CAAb;AACA,MAAMI,OAAO,GAAGV,CAAC,CAACW,IAAF,CAAOL,UAAP,IAAqB,CAArC;AACA,MAAMM,UAAU,GAAGF,OAAO,CAACG,QAAR,EAAnB;AACA,MAAMC,gBAAgB,GAAG,CAACJ,OAAO,GAAG,CAAX,EAAcG,QAAd,EAAzB;AAEA,MAAME,SAAS,GAAGjB,mBAAmB,CAACQ,UAAD,CAArC;AACA,SACE;AACE,IAAA,GAAG,EAAEL,GAAF,mBADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCANF,EAQE;AACE,IAAA,EAAE,EAAC,6CADL;AAEE,IAAA,GAAG,EAAEA,GAAF,oBAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,CAACD,CAAC,CAACS,OAAF,CAAUH,UAAV,CAAD,IACC,IAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,qBAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEA,UAAU,CAAC,GAAD,CAAV,CAAgBU,QAF7B;AAGE,IAAA,WAAW,EAAEV,UAAU,CAAC,GAAD,CAAV,CAAgBW,MAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,IAAC,qBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEX,UAAU,CAAC,GAAD,CAAV,CAAgBU,QAF7B;AAGE,IAAA,WAAW,EAAEV,UAAU,CAAC,GAAD,CAAV,CAAgBW,MAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,IAAC,qBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEX,UAAU,CAACQ,gBAAD,CAAV,CAA6BE,QAF1C;AAGE,IAAA,WAAW,EAAEV,UAAU,CAACQ,gBAAD,CAAV,CAA6BG,MAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBE,IAAC,qBAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEX,UAAU,CAACM,UAAD,CAAV,CAAuBI,QAFpC;AAGE,IAAA,WAAW,EAAEV,UAAU,CAACM,UAAD,CAAV,CAAuBK,MAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAqBGF,SAAS,GACR,IAAC,qBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEA,SAAS,CAACC,QAFvB;AAGE,IAAA,WAAW,EAAED,SAAS,CAACE,MAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CA5BJ,CARJ,CARF,CADF;AAoDD,CA7DD;;AA+DA,eAAed,sBAAf","sourcesContent":["import React from \"react\";\nimport {\n  getAttendanceRateBySignupDate,\n  getFirstWeekSignups\n} from \"features/singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\nimport { AttendeeData } from \"features/singleMeetingAnalysis/SingleMeetupTypes\";\nimport PercentageProgressBar from \"./PercentageProgressBar\";\nimport _ from \"lodash\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\ntype Props = {\n  attendees: AttendeeData[];\n  eventDate: string;\n};\nconst AttendanceBySignupDate = ({ attendees, eventDate }: Props) => {\n  const rateByDate = getAttendanceRateBySignupDate(attendees, eventDate);\n  console.log(\"attendanceRateByDate\", rateByDate);\n  console.log(!_.isEmpty(rateByDate));\n  const lastDay = _.size(rateByDate) - 1;\n  const lastDayKey = lastDay.toString();\n  const secondLastDayKey = (lastDay - 1).toString();\n\n  const firstWeek = getFirstWeekSignups(rateByDate);\n  return (\n    <div\n      css={css`\n        width: 800px;\n        margin: auto;\n      `}\n    >\n      <h3>Attendance By Signup Date</h3>\n\n      <div\n        id=\"AttendeePercentagesByMeetupRegistrationDate\"\n        css={css`\n          display: grid;\n          grid-template-columns: 2fr 3fr;\n        `}\n      >\n        {!_.isEmpty(rateByDate) && (\n          <React.Fragment>\n            <PercentageProgressBar\n              text=\"First Day\"\n              numerator={rateByDate[\"0\"].attended}\n              denominator={rateByDate[\"0\"].rsvped}\n            />\n            <PercentageProgressBar\n              text=\"Second Day\"\n              numerator={rateByDate[\"1\"].attended}\n              denominator={rateByDate[\"1\"].rsvped}\n            />\n            <PercentageProgressBar\n              text=\"Day Before\"\n              numerator={rateByDate[secondLastDayKey].attended}\n              denominator={rateByDate[secondLastDayKey].rsvped}\n            />\n            <PercentageProgressBar\n              text=\"Last Day\"\n              numerator={rateByDate[lastDayKey].attended}\n              denominator={rateByDate[lastDayKey].rsvped}\n            />\n            {firstWeek ? (\n              <PercentageProgressBar\n                text=\"First Week\"\n                numerator={firstWeek.attended}\n                denominator={firstWeek.rsvped}\n              />\n            ) : (\n              <div>Not enough days for first week data </div>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AttendanceBySignupDate;\n"]},"metadata":{},"sourceType":"module"}