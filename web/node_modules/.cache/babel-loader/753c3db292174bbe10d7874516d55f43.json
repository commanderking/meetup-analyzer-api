{"ast":null,"code":"import _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BACKEND_BASE_URL = \"localhost:5000\";\nvar EVENT_ENDPOINT = \"http://\".concat(BACKEND_BASE_URL, \"/events\");\nexport var postEvent =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(eventWithAttendees) {\n    var data, dataJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(EVENT_ENDPOINT, {\n              method: \"POST\",\n              mode: \"no-cors\",\n              body: JSON.stringify(eventWithAttendees)\n            });\n\n          case 3:\n            data = _context.sent;\n            _context.next = 6;\n            return data.json();\n\n          case 6:\n            dataJson = _context.sent;\n            return _context.abrupt(\"return\", dataJson);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"err\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function postEvent(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var data, dataJson;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(EVENT_ENDPOINT, {\n              method: \"GET\"\n            });\n\n          case 3:\n            data = _context2.sent;\n            _context2.next = 6;\n            return data.json();\n\n          case 6:\n            dataJson = _context2.sent;\n            return _context2.abrupt(\"return\", dataJson.data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"err\", _context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function getEvents() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/requests/eventRequest.ts"],"names":["BACKEND_BASE_URL","EVENT_ENDPOINT","postEvent","eventWithAttendees","fetch","method","mode","body","JSON","stringify","data","json","dataJson","console","log","getEvents"],"mappings":";;AAEA,IAAMA,gBAAgB,GAAG,gBAAzB;AACA,IAAMC,cAAc,oBAAaD,gBAAb,YAApB;AAIA,OAAO,IAAME,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,kBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFC,KAAK,CAACH,cAAD,EAAiB;AACvCI,cAAAA,MAAM,EAAE,MAD+B;AAEvCC,cAAAA,IAAI,EAAE,SAFiC;AAGvCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,kBAAf;AAHiC,aAAjB,CAFH;;AAAA;AAEfO,YAAAA,IAFe;AAAA;AAAA,mBAQEA,IAAI,CAACC,IAAL,EARF;;AAAA;AAQfC,YAAAA,QARe;AAAA,6CASdA,QATc;;AAAA;AAAA;AAAA;AAWrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATZ,SAAS;AAAA;AAAA;AAAA,GAAf;AAeP,OAAO,IAAMa,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFX,KAAK,CAACH,cAAD,EAAiB;AACvCI,cAAAA,MAAM,EAAE;AAD+B,aAAjB,CAFH;;AAAA;AAEfK,YAAAA,IAFe;AAAA;AAAA,mBAMEA,IAAI,CAACC,IAAL,EANF;;AAAA;AAMfC,YAAAA,QANe;AAAA,8CAOdA,QAAQ,CAACF,IAPK;;AAAA;AAAA;AAAA;AASrBG,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AATqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATC,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import { AttendeeData, EventData } from \"./eventTypes\";\n\nconst BACKEND_BASE_URL = \"localhost:5000\";\nconst EVENT_ENDPOINT = `http://${BACKEND_BASE_URL}/events`;\n\ntype EventWithAttendees = EventData & { attendees: AttendeeData[] };\n\nexport const postEvent = async (eventWithAttendees: EventWithAttendees) => {\n  try {\n    const data = await fetch(EVENT_ENDPOINT, {\n      method: \"POST\",\n      mode: \"no-cors\",\n      body: JSON.stringify(eventWithAttendees)\n    });\n\n    const dataJson = await data.json();\n    return dataJson;\n  } catch (err) {\n    console.log(\"err\", err);\n  }\n};\n\nexport const getEvents = async () => {\n  try {\n    const data = await fetch(EVENT_ENDPOINT, {\n      method: \"GET\"\n    });\n\n    const dataJson = await data.json();\n    return dataJson.data;\n  } catch (err) {\n    console.log(\"err\", err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}