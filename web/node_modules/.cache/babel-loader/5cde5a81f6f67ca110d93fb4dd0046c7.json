{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/event/EventContainer.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useEventsState } from \"../../context/eventsContext\";\nimport { getAttendanceForEvents } from \"../../requests/attendanceRequest\";\nimport { SingleMeetupSummary } from \"../singleMeetingAnalysis/SingleMeetupSummary\";\n\nvar getAttendance =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(eventId, setAttendance) {\n    var attendance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAttendanceForEvents([eventId]);\n\n          case 2:\n            attendance = _context.sent;\n            _context.next = 5;\n            return setAttendance(attendance);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAttendance(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar EventContainer = function EventContainer(_ref2) {\n  var match = _ref2.match;\n\n  var _useEventsState = useEventsState(),\n      events = _useEventsState.events;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      attendance = _useState2[0],\n      setAttendance = _useState2[1];\n\n  useEffect(function () {\n    var event = events.find(function (event) {\n      return event.id = match.params.id;\n    });\n    console.log(\"event\", event);\n\n    if (event) {\n      var _attendance = getAttendance(event.id, setAttendance);\n    }\n  }, []);\n  var event = events.find(function (event) {\n    return event.id = match.params.id;\n  });\n  console.log(\"attendance\", attendance);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Event \", match.params.id, React.createElement(SingleMeetupSummary, {\n    attendees: attendance,\n    eventName: event.id || \"\",\n    eventDate: event.eventDate || \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default EventContainer;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/event/EventContainer.tsx"],"names":["React","useEffect","useState","useEventsState","getAttendanceForEvents","SingleMeetupSummary","getAttendance","eventId","setAttendance","attendance","EventContainer","match","events","event","find","id","params","console","log","eventDate"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,mBAAT,QAAoC,8CAApC;;AAMA,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,OAAP,EAAwBC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKJ,sBAAsB,CAAC,CAACG,OAAD,CAAD,CAD3B;;AAAA;AACdE,YAAAA,UADc;AAAA;AAAA,mBAEdD,aAAa,CAACC,UAAD,CAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbH,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAKA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,QAAsB;AAAA,MAAnBC,KAAmB,SAAnBA,KAAmB;;AAAA,wBACxBR,cAAc,EADU;AAAA,MACnCS,MADmC,mBACnCA,MADmC;;AAAA,kBAEPV,QAAQ,CAAC,EAAD,CAFD;AAAA;AAAA,MAEpCO,UAFoC;AAAA,MAExBD,aAFwB;;AAG3CP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,UAAAD,KAAK;AAAA,aAAKA,KAAK,CAACE,EAAN,GAAWJ,KAAK,CAACK,MAAN,CAAaD,EAA7B;AAAA,KAAjB,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;;AACA,QAAIA,KAAJ,EAAW;AACT,UAAMJ,WAAU,GAAGH,aAAa,CAACO,KAAK,CAACE,EAAP,EAAWP,aAAX,CAAhC;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,MAAMK,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,UAAAD,KAAK;AAAA,WAAKA,KAAK,CAACE,EAAN,GAAWJ,KAAK,CAACK,MAAN,CAAaD,EAA7B;AAAA,GAAjB,CAAd;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BT,UAA1B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSE,KAAK,CAACK,MAAN,CAAaD,EADtB,EAEE,oBAAC,mBAAD;AACE,IAAA,SAAS,EAAEN,UADb;AAEE,IAAA,SAAS,EAAEI,KAAK,CAACE,EAAN,IAAY,EAFzB;AAGE,IAAA,SAAS,EAAEF,KAAK,CAACM,SAAN,IAAmB,EAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAzBD;;AA2BA,eAAeT,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useEventsState } from \"../../context/eventsContext\";\nimport { getAttendanceForEvents } from \"../../requests/attendanceRequest\";\nimport { SingleMeetupSummary } from \"../singleMeetingAnalysis/SingleMeetupSummary\";\nimport { getSummaryData } from \"../singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\ntype Props = {\n  match: any;\n};\n\nconst getAttendance = async (eventId: string, setAttendance: any) => {\n  const attendance = await getAttendanceForEvents([eventId]);\n  await setAttendance(attendance);\n};\n\nconst EventContainer = ({ match }: Props) => {\n  const { events } = useEventsState();\n  const [attendance, setAttendance] = useState([]);\n  useEffect(() => {\n    const event = events.find(event => (event.id = match.params.id));\n    console.log(\"event\", event);\n    if (event) {\n      const attendance = getAttendance(event.id, setAttendance);\n    }\n  }, []);\n\n  const event = events.find(event => (event.id = match.params.id));\n\n  console.log(\"attendance\", attendance);\n\n  return (\n    <div>\n      Event {match.params.id}\n      <SingleMeetupSummary\n        attendees={attendance}\n        eventName={event.id || \"\"}\n        eventDate={event.eventDate || \"\"}\n      />\n    </div>\n  );\n};\n\nexport default EventContainer;\n"]},"metadata":{},"sourceType":"module"}