{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/AttendancePredictorContainer.tsx\";\n// @flow\nimport React, { useState } from \"react\";\nimport { Button, Label, FormGroup, Input, Form, Col } from \"reactstrap\";\nimport csv from \"csvtojson\";\nimport { bindRawMeetupData, getMeetupUserIds } from \"features/singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\nimport { getAttendanceHistoryForUsers } from \"requests/attendanceHistoryRequest\";\nvar labelColumns = 3;\nvar inputColumns = 9;\n\nvar loadAttendanceHistory =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(userIds, setUpcomingMeetupData) {\n    var attendanceHistory;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAttendanceHistoryForUsers(userIds);\n\n          case 2:\n            attendanceHistory = _context.sent;\n            console.log(\"attendanceHistory\", attendanceHistory);\n            setUpcomingMeetupData(attendanceHistory);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadAttendanceHistory(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar AttendancePredictorContainer = function AttendancePredictorContainer() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      rawMeetupData = _useState2[0],\n      setRawMeetupData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      upcomingMeetupData = _useState4[0],\n      setUpcomingMeetupData = _useState4[1];\n\n  var handleChange = function handleChange(event) {\n    setRawMeetupData(event.target.value);\n  };\n\n  var submitJSON = function submitJSON(event) {\n    event.preventDefault();\n    csv().fromString(rawMeetupData).then(function (result) {\n      var bindedData = bindRawMeetupData(result);\n      var attendeeIds = getMeetupUserIds(bindedData);\n      loadAttendanceHistory(attendeeIds, setUpcomingMeetupData);\n      console.log(\"attendeeIds\", attendeeIds);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Label, {\n    sm: labelColumns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Event Attendance Data: \"), React.createElement(Col, {\n    sm: inputColumns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Input, {\n    rows: 10,\n    type: \"textarea\",\n    value: rawMeetupData,\n    placeholder: \"Enter csv data here...\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: submitJSON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Summarize Data\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, upcomingMeetupData && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Data here\")));\n};\n\nexport default AttendancePredictorContainer;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/AttendancePredictorContainer.tsx"],"names":["React","useState","Button","Label","FormGroup","Input","Form","Col","csv","bindRawMeetupData","getMeetupUserIds","getAttendanceHistoryForUsers","labelColumns","inputColumns","loadAttendanceHistory","userIds","setUpcomingMeetupData","attendanceHistory","console","log","AttendancePredictorContainer","rawMeetupData","setRawMeetupData","upcomingMeetupData","handleChange","event","target","value","submitJSON","preventDefault","fromString","then","result","bindedData","attendeeIds"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useState } from \"react\";\nimport { Button, Label, FormGroup, Input, Form, Col } from \"reactstrap\";\nimport csv from \"csvtojson\";\nimport {\n  bindRawMeetupData,\n  getMeetupUserIds\n} from \"features/singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\nimport { AttendeeData } from \"features/singleMeetingAnalysis/SingleMeetupTypes\";\nimport { getAttendanceHistoryForUsers } from \"requests/attendanceHistoryRequest\";\nconst labelColumns = 3;\nconst inputColumns = 9;\n\nconst loadAttendanceHistory = async (\n  userIds: string[],\n  setUpcomingMeetupData: any\n) => {\n  const attendanceHistory = await getAttendanceHistoryForUsers(userIds);\n  console.log(\"attendanceHistory\", attendanceHistory);\n  setUpcomingMeetupData(attendanceHistory);\n};\n\nconst AttendancePredictorContainer = () => {\n  const [rawMeetupData, setRawMeetupData] = useState(\"\");\n  const [upcomingMeetupData, setUpcomingMeetupData]: [\n    AttendeeData[],\n    any\n  ] = useState([]);\n  const handleChange = (event: any) => {\n    setRawMeetupData(event.target.value);\n  };\n\n  const submitJSON = (event: any) => {\n    event.preventDefault();\n    csv()\n      .fromString(rawMeetupData)\n      .then(result => {\n        const bindedData = bindRawMeetupData(result);\n        const attendeeIds = getMeetupUserIds(bindedData);\n        loadAttendanceHistory(attendeeIds, setUpcomingMeetupData);\n        console.log(\"attendeeIds\", attendeeIds);\n      });\n  };\n\n  return (\n    <div>\n      <Form>\n        <div>\n          <FormGroup row>\n            <Label sm={labelColumns}>Event Attendance Data: </Label>\n            <Col sm={inputColumns}>\n              <Input\n                rows={10}\n                type=\"textarea\"\n                value={rawMeetupData}\n                placeholder={\"Enter csv data here...\"}\n                onChange={handleChange}\n              />\n            </Col>\n          </FormGroup>\n          <div />\n        </div>\n        <Button color=\"success\" type=\"submit\" onClick={submitJSON}>\n          Summarize Data\n        </Button>\n      </Form>\n      <div>{upcomingMeetupData && <div>Data here</div>}</div>\n    </div>\n  );\n};\n\nexport default AttendancePredictorContainer;\n"]},"metadata":{},"sourceType":"module"}