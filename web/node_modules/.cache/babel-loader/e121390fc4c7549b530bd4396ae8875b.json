{"ast":null,"code":"export var getAttendanceRateForMembersWithAtLeastOneMeetupAttended = function getAttendanceRateForMembersWithAtLeastOneMeetupAttended(attendanceHistory) {\n  return attendanceHistory.memberAttendanceHistory.reduce(function (acc, attendee) {\n    return {\n      attended: acc.attended + attendee.attended,\n      rsvped: acc.rsvped + attendee.rsvped\n    };\n  }, {\n    attended: 0,\n    rsvped: 0\n  });\n};\nexport var getAttendanceRateForPreviousAttendees = function getAttendanceRateForPreviousAttendees(attendanceHistory) {\n  var attendanceCounts = getAttendanceRateForMembersWithAtLeastOneMeetupAttended(attendanceHistory);\n  var attended = attendanceCounts.attended,\n      rsvped = attendanceCounts.rsvped;\n  return attended / rsvped;\n};\nexport var getFirstTimeAttendeeRate = function getFirstTimeAttendeeRate(attendanceHistory) {\n  var _attendanceHistory$at = attendanceHistory.attendeeHistoryForThoseWhoAttendedOnlyOneMeetup,\n      attended = _attendanceHistory$at.attended,\n      rsvped = _attendanceHistory$at.rsvped;\n  return attended / rsvped;\n};\nexport var getPredictedAttendanceCount = function getPredictedAttendanceCount(attendanceHistory, attendeeIds) {\n  var firstTimeAttendeeRate = getFirstTimeAttendeeRate(attendanceHistory);\n  var attendanceRateForPreviousAttendees = getAttendanceRateForPreviousAttendees(attendanceHistory);\n  var regulars = attendanceHistory.memberAttendanceHistory.length;\n  var firstTimers = attendeeIds.length - regulars;\n  return Math.round(firstTimers * firstTimeAttendeeRate + regulars * attendanceRateForPreviousAttendees);\n};","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/attendancePredictorUtils.ts"],"names":["getAttendanceRateForMembersWithAtLeastOneMeetupAttended","attendanceHistory","memberAttendanceHistory","reduce","acc","attendee","attended","rsvped","getAttendanceRateForPreviousAttendees","attendanceCounts","getFirstTimeAttendeeRate","attendeeHistoryForThoseWhoAttendedOnlyOneMeetup","getPredictedAttendanceCount","attendeeIds","firstTimeAttendeeRate","attendanceRateForPreviousAttendees","regulars","length","firstTimers","Math","round"],"mappings":"AAUA,OAAO,IAAMA,uDAAuD,GAAG,SAA1DA,uDAA0D,CACrEC,iBADqE,EAElE;AACH,SAAOA,iBAAiB,CAACC,uBAAlB,CAA0CC,MAA1C,CACL,UAACC,GAAD,EAA8BC,QAA9B,EAAoE;AAClE,WAAO;AACLC,MAAAA,QAAQ,EAAEF,GAAG,CAACE,QAAJ,GAAeD,QAAQ,CAACC,QAD7B;AAELC,MAAAA,MAAM,EAAEH,GAAG,CAACG,MAAJ,GAAaF,QAAQ,CAACE;AAFzB,KAAP;AAID,GANI,EAOL;AACED,IAAAA,QAAQ,EAAE,CADZ;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAPK,CAAP;AAYD,CAfM;AAiBP,OAAO,IAAMC,qCAAqC,GAAG,SAAxCA,qCAAwC,CACnDP,iBADmD,EAEhD;AACH,MAAMQ,gBAAgB,GAAGT,uDAAuD,CAC9EC,iBAD8E,CAAhF;AADG,MAIKK,QAJL,GAI0BG,gBAJ1B,CAIKH,QAJL;AAAA,MAIeC,MAJf,GAI0BE,gBAJ1B,CAIeF,MAJf;AAKH,SAAOD,QAAQ,GAAGC,MAAlB;AACD,CARM;AAUP,OAAO,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,CACtCT,iBADsC,EAE3B;AAAA,8BAIPA,iBAAiB,CAACU,+CAJX;AAAA,MAETL,QAFS,yBAETA,QAFS;AAAA,MAGTC,MAHS,yBAGTA,MAHS;AAMX,SAAOD,QAAQ,GAAGC,MAAlB;AACD,CATM;AAWP,OAAO,IAAMK,2BAA2B,GAAG,SAA9BA,2BAA8B,CACzCX,iBADyC,EAEzCY,WAFyC,EAG9B;AACX,MAAMC,qBAAqB,GAAGJ,wBAAwB,CAACT,iBAAD,CAAtD;AAEA,MAAMc,kCAAkC,GAAGP,qCAAqC,CAC9EP,iBAD8E,CAAhF;AAGA,MAAMe,QAAQ,GAAGf,iBAAiB,CAACC,uBAAlB,CAA0Ce,MAA3D;AACA,MAAMC,WAAW,GAAGL,WAAW,CAACI,MAAZ,GAAqBD,QAAzC;AAEA,SAAOG,IAAI,CAACC,KAAL,CACLF,WAAW,GAAGJ,qBAAd,GACEE,QAAQ,GAAGD,kCAFR,CAAP;AAID,CAhBM","sourcesContent":["import {\n  AttendanceHistory,\n  MemberAttendanceHistory\n} from \"requests/attendanceHistoryTypes\";\n\ntype AttendanceHistoryCount = {\n  attended: number;\n  rsvped: number;\n};\n\nexport const getAttendanceRateForMembersWithAtLeastOneMeetupAttended = (\n  attendanceHistory: AttendanceHistory\n) => {\n  return attendanceHistory.memberAttendanceHistory.reduce(\n    (acc: AttendanceHistoryCount, attendee: MemberAttendanceHistory) => {\n      return {\n        attended: acc.attended + attendee.attended,\n        rsvped: acc.rsvped + attendee.rsvped\n      };\n    },\n    {\n      attended: 0,\n      rsvped: 0\n    }\n  );\n};\n\nexport const getAttendanceRateForPreviousAttendees = (\n  attendanceHistory: AttendanceHistory\n) => {\n  const attendanceCounts = getAttendanceRateForMembersWithAtLeastOneMeetupAttended(\n    attendanceHistory\n  );\n  const { attended, rsvped } = attendanceCounts;\n  return attended / rsvped;\n};\n\nexport const getFirstTimeAttendeeRate = (\n  attendanceHistory: AttendanceHistory\n): number => {\n  const {\n    attended,\n    rsvped\n  } = attendanceHistory.attendeeHistoryForThoseWhoAttendedOnlyOneMeetup;\n\n  return attended / rsvped;\n};\n\nexport const getPredictedAttendanceCount = (\n  attendanceHistory: AttendanceHistory,\n  attendeeIds: string[]\n): number => {\n  const firstTimeAttendeeRate = getFirstTimeAttendeeRate(attendanceHistory);\n\n  const attendanceRateForPreviousAttendees = getAttendanceRateForPreviousAttendees(\n    attendanceHistory\n  );\n  const regulars = attendanceHistory.memberAttendanceHistory.length;\n  const firstTimers = attendeeIds.length - regulars;\n\n  return Math.round(\n    firstTimers * firstTimeAttendeeRate +\n      regulars * attendanceRateForPreviousAttendees\n  );\n};\n"]},"metadata":{},"sourceType":"module"}