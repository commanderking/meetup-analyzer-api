{"ast":null,"code":"import _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BACKEND_BASE_URL = \"localhost:5000\";\nvar EVENT_ENDPOINT = \"\".concat(BACKEND_BASE_URL, \"/events\");\nexport var postEvent =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(event) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"event\", event);\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(EVENT_ENDPOINT, {\n              method: \"POST\",\n              mode: \"no-cors\"\n            });\n\n          case 4:\n            data = _context.sent;\n            _context.next = 7;\n            return data.json();\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"err\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function postEvent(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/requests/eventRequest.ts"],"names":["BACKEND_BASE_URL","EVENT_ENDPOINT","postEvent","event","console","log","fetch","method","mode","data","json"],"mappings":";;AAEA,IAAMA,gBAAgB,GAAG,gBAAzB;AACA,IAAMC,cAAc,aAAMD,gBAAN,YAApB;AAEA,OAAO,IAAME,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AADuB;AAAA;AAAA,mBAGFG,KAAK,CAACL,cAAD,EAAiB;AACvCM,cAAAA,MAAM,EAAE,MAD+B;AAEvCC,cAAAA,IAAI,EAAE;AAFiC,aAAjB,CAHH;;AAAA;AAGfC,YAAAA,IAHe;AAAA;AAAA,mBAQRA,IAAI,CAACC,IAAL,EARQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUrBN,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATH,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import { AttendeeData, EventData } from \"./eventTypes\";\n\nconst BACKEND_BASE_URL = \"localhost:5000\";\nconst EVENT_ENDPOINT = `${BACKEND_BASE_URL}/events`;\n\nexport const postEvent = async (event: EventData) => {\n  console.log(\"event\", event);\n  try {\n    const data = await fetch(EVENT_ENDPOINT, {\n      method: \"POST\",\n      mode: \"no-cors\"\n    });\n\n    return await data.json();\n  } catch (err) {\n    console.log(\"err\", err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}