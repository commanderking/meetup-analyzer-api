{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/AttendancePredictorContainer.tsx\";\n// @flow\nimport React, { useState } from \"react\";\nimport csv from \"csvtojson\";\nimport { bindRawMeetupData, getMeetupUserIds } from \"features/singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\nimport { getAttendanceHistoryForUsers } from \"requests/attendanceHistoryRequest\";\nimport AttendanceHistoryResults from \"features/attendancePredictor/components/AttendanceHistoryResults\";\nimport AttendanceHistoryForm from \"features/attendancePredictor/components/AttendanceHistoryForm\";\nimport { Collapse, Button } from \"reactstrap\";\n\nvar loadAttendanceHistory =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(userIds, setAttendanceHistory) {\n    var attendanceHistory;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAttendanceHistoryForUsers({\n              userIds: userIds\n            });\n\n          case 2:\n            attendanceHistory = _context.sent;\n            console.log(\"attendanceHistory\", attendanceHistory);\n            setAttendanceHistory(attendanceHistory);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadAttendanceHistory(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar AttendancePredictorContainer = function AttendancePredictorContainer() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      rawMeetupData = _useState2[0],\n      setRawMeetupData = _useState2[1];\n\n  var _useState3 = useState({\n    attendeeHistoryForThoseWhoAttendedOnlyOneMeetup: {\n      attended: 0,\n      rsvped: 0\n    },\n    memberAttendanceHistory: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attendanceHistory = _useState4[0],\n      setAttendanceHistory = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      attendeeIds = _useState6[0],\n      setAttendeeIds = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showForm = _useState8[0],\n      setShowForm = _useState8[1];\n\n  var submitJSON = function submitJSON(event) {\n    event.preventDefault();\n    csv().fromString(rawMeetupData).then(function (result) {\n      var bindedData = bindRawMeetupData(result);\n      var attendeeIds = getMeetupUserIds(bindedData);\n      loadAttendanceHistory(attendeeIds, setAttendanceHistory);\n      setAttendeeIds(attendeeIds);\n      setShowForm(false);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Collapse, {\n    isOpen: showForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, !showForm && React.createElement(Button, {\n    onClick: function onClick() {\n      return setShowForm(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Edit Data\"), React.createElement(AttendanceHistoryForm, {\n    rawMeetupData: rawMeetupData,\n    setRawMeetupData: setRawMeetupData,\n    submitJSON: submitJSON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), !showForm && React.createElement(AttendanceHistoryResults, {\n    attendanceHistory: attendanceHistory,\n    attendeeIds: attendeeIds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default AttendancePredictorContainer;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/AttendancePredictorContainer.tsx"],"names":["React","useState","csv","bindRawMeetupData","getMeetupUserIds","getAttendanceHistoryForUsers","AttendanceHistoryResults","AttendanceHistoryForm","Collapse","Button","loadAttendanceHistory","userIds","setAttendanceHistory","attendanceHistory","console","log","AttendancePredictorContainer","rawMeetupData","setRawMeetupData","attendeeHistoryForThoseWhoAttendedOnlyOneMeetup","attended","rsvped","memberAttendanceHistory","attendeeIds","setAttendeeIds","showForm","setShowForm","submitJSON","event","preventDefault","fromString","then","result","bindedData"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,2DAHP;AAIA,SAASC,4BAAT,QAA6C,mCAA7C;AACA,OAAOC,wBAAP,MAAqC,kEAArC;AACA,OAAOC,qBAAP,MAAkC,+DAAlC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;;AAEA,IAAMC,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAC5BC,OAD4B,EAE5BC,oBAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIIP,4BAA4B,CAAC;AAAEM,cAAAA,OAAO,EAAPA;AAAF,aAAD,CAJhC;;AAAA;AAItBE,YAAAA,iBAJsB;AAK5BC,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,iBAAjC;AACAD,YAAAA,oBAAoB,CAACC,iBAAD,CAApB;;AAN4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBH,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;AASA,IAAMM,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AAAA,kBACCf,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAClCgB,aADkC;AAAA,MACnBC,gBADmB;;AAAA,mBAEqBjB,QAAQ,CAAC;AACrEkB,IAAAA,+CAA+C,EAAE;AAC/CC,MAAAA,QAAQ,EAAE,CADqC;AAE/CC,MAAAA,MAAM,EAAE;AAFuC,KADoB;AAKrEC,IAAAA,uBAAuB,EAAE;AAL4C,GAAD,CAF7B;AAAA;AAAA,MAElCT,iBAFkC;AAAA,MAEfD,oBAFe;;AAAA,mBAScX,QAAQ,CAAC,EAAD,CATtB;AAAA;AAAA,MASlCsB,WATkC;AAAA,MASrBC,cATqB;;AAAA,mBAWTvB,QAAQ,CAAC,IAAD,CAXC;AAAA;AAAA,MAWlCwB,QAXkC;AAAA,MAWxBC,WAXwB;;AAazC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAgB;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA3B,IAAAA,GAAG,GACA4B,UADH,CACcb,aADd,EAEGc,IAFH,CAEQ,UAAAC,MAAM,EAAI;AACd,UAAMC,UAAU,GAAG9B,iBAAiB,CAAC6B,MAAD,CAApC;AACA,UAAMT,WAAW,GAAGnB,gBAAgB,CAAC6B,UAAD,CAApC;AACAvB,MAAAA,qBAAqB,CAACa,WAAD,EAAcX,oBAAd,CAArB;AACAY,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KARH;AASD,GAXD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,QAAD,IACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,WAAW,CAAC,IAAD,CAAjB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAIE,oBAAC,qBAAD;AACE,IAAA,aAAa,EAAET,aADjB;AAEE,IAAA,gBAAgB,EAAEC,gBAFpB;AAGE,IAAA,UAAU,EAAES,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAWG,CAACF,QAAD,IACC,oBAAC,wBAAD;AACE,IAAA,iBAAiB,EAAEZ,iBADrB;AAEE,IAAA,WAAW,EAAEU,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF;AAoBD,CA9CD;;AAgDA,eAAeP,4BAAf","sourcesContent":["// @flow\nimport React, { useState } from \"react\";\nimport csv from \"csvtojson\";\nimport {\n  bindRawMeetupData,\n  getMeetupUserIds\n} from \"features/singleMeetingAnalysis/SingleMeetingAnalysisUtils\";\nimport { getAttendanceHistoryForUsers } from \"requests/attendanceHistoryRequest\";\nimport AttendanceHistoryResults from \"features/attendancePredictor/components/AttendanceHistoryResults\";\nimport AttendanceHistoryForm from \"features/attendancePredictor/components/AttendanceHistoryForm\";\nimport { Collapse, Button } from \"reactstrap\";\n\nconst loadAttendanceHistory = async (\n  userIds: string[],\n  setAttendanceHistory: any\n) => {\n  const attendanceHistory = await getAttendanceHistoryForUsers({ userIds });\n  console.log(\"attendanceHistory\", attendanceHistory);\n  setAttendanceHistory(attendanceHistory);\n};\n\nconst AttendancePredictorContainer = () => {\n  const [rawMeetupData, setRawMeetupData] = useState(\"\");\n  const [attendanceHistory, setAttendanceHistory]: [any, any] = useState({\n    attendeeHistoryForThoseWhoAttendedOnlyOneMeetup: {\n      attended: 0,\n      rsvped: 0\n    },\n    memberAttendanceHistory: []\n  });\n  const [attendeeIds, setAttendeeIds]: [string[], any] = useState([]);\n\n  const [showForm, setShowForm] = useState(true);\n\n  const submitJSON = (event: any) => {\n    event.preventDefault();\n    csv()\n      .fromString(rawMeetupData)\n      .then(result => {\n        const bindedData = bindRawMeetupData(result);\n        const attendeeIds = getMeetupUserIds(bindedData);\n        loadAttendanceHistory(attendeeIds, setAttendanceHistory);\n        setAttendeeIds(attendeeIds);\n        setShowForm(false);\n      });\n  };\n\n  return (\n    <div>\n      <Collapse isOpen={showForm}>\n        {!showForm && (\n          <Button onClick={() => setShowForm(true)}>Edit Data</Button>\n        )}\n        <AttendanceHistoryForm\n          rawMeetupData={rawMeetupData}\n          setRawMeetupData={setRawMeetupData}\n          submitJSON={submitJSON}\n        />\n      </Collapse>\n      {!showForm && (\n        <AttendanceHistoryResults\n          attendanceHistory={attendanceHistory}\n          attendeeIds={attendeeIds}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AttendancePredictorContainer;\n"]},"metadata":{},"sourceType":"module"}