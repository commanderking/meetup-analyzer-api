{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/event/EventContainer.tsx\";\nimport { useEffect, useState } from \"react\";\nimport { getAttendanceForEvents } from \"../../requests/attendanceRequest\";\nimport { SingleMeetupSummary } from \"../singleMeetingAnalysis/SingleMeetupSummary\";\nimport moment from \"moment\";\nimport { useEventsCall } from \"../../context/eventsHook\";\n\nvar getAttendance =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(eventId, setAttendance) {\n    var attendance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAttendanceForEvents([eventId]);\n\n          case 2:\n            attendance = _context.sent;\n            _context.next = 5;\n            return setAttendance(attendance);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAttendance(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar EventContainer = function EventContainer(_ref2) {\n  var match = _ref2.match;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      attendance = _useState2[0],\n      setAttendance = _useState2[1];\n\n  var _useEventsCall = useEventsCall(),\n      isLoading = _useEventsCall.isLoading,\n      events = _useEventsCall.events; // const { events } = useEventsState();\n  // @ts-ignore\n\n\n  var event = events.find(function (event) {\n    return event.id = match.params.id;\n  }) || [];\n  useEffect(function () {\n    if (event && event.id) {\n      getAttendance(event.id, setAttendance);\n    }\n  }, [events]);\n  if (isLoading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Loading...\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(SingleMeetupSummary, {\n    attendees: attendance,\n    eventName: event.name || \"\",\n    eventDate: moment(event.date).format(\"MM/DD/YY\") || \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default EventContainer;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/event/EventContainer.tsx"],"names":["useEffect","useState","getAttendanceForEvents","SingleMeetupSummary","moment","useEventsCall","getAttendance","eventId","setAttendance","attendance","EventContainer","match","isLoading","events","event","find","id","params","name","date","format"],"mappings":";;;;AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,mBAAT,QAAoC,8CAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAKA,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,OAAP,EAAwBC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKN,sBAAsB,CAAC,CAACK,OAAD,CAAD,CAD3B;;AAAA;AACdE,YAAAA,UADc;AAAA;AAAA,mBAEdD,aAAa,CAACC,UAAD,CAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbH,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAKA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,QAAsB;AAAA,MAAnBC,KAAmB,SAAnBA,KAAmB;;AAAA,kBACPV,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,MACpCQ,UADoC;AAAA,MACxBD,aADwB;;AAAA,uBAEbH,aAAa,EAFA;AAAA,MAEnCO,SAFmC,kBAEnCA,SAFmC;AAAA,MAExBC,MAFwB,kBAExBA,MAFwB,EAI3C;AACA;;;AACA,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,UAAAD,KAAK;AAAA,WAAKA,KAAK,CAACE,EAAN,GAAWL,KAAK,CAACM,MAAN,CAAaD,EAA7B;AAAA,GAAjB,KAAsD,EAApE;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,KAAK,IAAIA,KAAK,CAACE,EAAnB,EAAuB;AACrBV,MAAAA,aAAa,CAACQ,KAAK,CAACE,EAAP,EAAWR,aAAX,CAAb;AACD;AACF,GAJQ,EAIN,CAACK,MAAD,CAJM,CAAT;AAMA,MAAID,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEf,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AACE,IAAA,SAAS,EAAEH,UADb;AAEE,IAAA,SAAS,EAAEK,KAAK,CAACI,IAAN,IAAc,EAF3B;AAGE,IAAA,SAAS,EAAEd,MAAM,CAACU,KAAK,CAACK,IAAP,CAAN,CAAmBC,MAAnB,CAA0B,UAA1B,KAAyC,EAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAzBD;;AA2BA,eAAeV,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useEventsState } from \"../../context/eventsContext\";\nimport { getAttendanceForEvents } from \"../../requests/attendanceRequest\";\nimport { SingleMeetupSummary } from \"../singleMeetingAnalysis/SingleMeetupSummary\";\nimport moment from \"moment\";\nimport { useEventsCall } from \"../../context/eventsHook\";\ntype Props = {\n  match: any;\n};\n\nconst getAttendance = async (eventId: string, setAttendance: any) => {\n  const attendance = await getAttendanceForEvents([eventId]);\n  await setAttendance(attendance);\n};\n\nconst EventContainer = ({ match }: Props) => {\n  const [attendance, setAttendance] = useState([]);\n  const { isLoading, events } = useEventsCall();\n\n  // const { events } = useEventsState();\n  // @ts-ignore\n  const event = events.find(event => (event.id = match.params.id)) || [];\n\n  useEffect(() => {\n    if (event && event.id) {\n      getAttendance(event.id, setAttendance);\n    }\n  }, [events]);\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <SingleMeetupSummary\n        attendees={attendance}\n        eventName={event.name || \"\"}\n        eventDate={moment(event.date).format(\"MM/DD/YY\") || \"\"}\n      />\n    </div>\n  );\n};\n\nexport default EventContainer;\n"]},"metadata":{},"sourceType":"module"}