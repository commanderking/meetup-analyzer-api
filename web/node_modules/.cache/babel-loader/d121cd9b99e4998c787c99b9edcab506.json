{"ast":null,"code":"import _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BACKEND_BASE_URL = \"localhost:5000\";\nvar ATTENDANCE_ENDPOINT = \"http://\".concat(BACKEND_BASE_URL, \"/attendance\");\nexport var getAttendanceForEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(eventIds) {\n    var data, dataJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(ATTENDANCE_ENDPOINT, {\n              method: \"POST\",\n              body: JSON.stringify({\n                eventIds: eventIds\n              })\n            });\n\n          case 3:\n            data = _context.sent;\n            console.log(\"data\", data);\n            _context.next = 7;\n            return data.json();\n\n          case 7:\n            dataJson = _context.sent;\n            console.log(\"dataJson\", dataJson);\n            return _context.abrupt(\"return\", dataJson.data);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"err\", _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function getAttendanceForEvents(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/requests/attendanceRequest.ts"],"names":["BACKEND_BASE_URL","ATTENDANCE_ENDPOINT","getAttendanceForEvents","eventIds","fetch","method","body","JSON","stringify","data","console","log","json","dataJson"],"mappings":";;AAAA,IAAMA,gBAAgB,GAAG,gBAAzB;AACA,IAAMC,mBAAmB,oBAAaD,gBAAb,gBAAzB;AAEA,OAAO,IAAME,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEfC,KAAK,CAACH,mBAAD,EAAsB;AAC5CI,cAAAA,MAAM,EAAE,MADoC;AAE5CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,gBAAAA,QAAQ,EAARA;AADmB,eAAf;AAFsC,aAAtB,CAFU;;AAAA;AAE5BM,YAAAA,IAF4B;AASlCC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AATkC;AAAA,mBAWXA,IAAI,CAACG,IAAL,EAXW;;AAAA;AAW5BC,YAAAA,QAX4B;AAYlCH,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,QAAxB;AAZkC,6CAa3BA,QAAQ,CAACJ,IAbkB;;AAAA;AAAA;AAAA;AAelCC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AAfkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBT,sBAAsB;AAAA;AAAA;AAAA,GAA5B","sourcesContent":["const BACKEND_BASE_URL = \"localhost:5000\";\nconst ATTENDANCE_ENDPOINT = `http://${BACKEND_BASE_URL}/attendance`;\n\nexport const getAttendanceForEvents = async (eventIds: string[]) => {\n  try {\n    const data = await fetch(ATTENDANCE_ENDPOINT, {\n      method: \"POST\",\n      body: JSON.stringify({\n        eventIds\n      })\n    });\n\n    console.log(\"data\", data);\n\n    const dataJson = await data.json();\n    console.log(\"dataJson\", dataJson);\n    return dataJson.data;\n  } catch (err) {\n    console.log(\"err\", err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}