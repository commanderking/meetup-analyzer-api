{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from \"react\";\nimport { getEvents } from \"../../requests/eventRequest\";\nimport { useEventsState } from \"../../context/eventsContext\";\n\nvar getEventsAndAttendanceForEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(setApiState) {\n    var events, _useEventsState, setEvents;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setApiState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                isLoading: true\n              });\n            });\n            _context.prev = 1;\n            _context.next = 4;\n            return getEvents();\n\n          case 4:\n            events = _context.sent;\n            console.log(\"first events\", events); // const attendance = await getAttendanceForEvents(eventIds);\n\n            setApiState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                isLoading: false // events\n                // attendance\n\n              });\n            });\n            console.log(\"post\", events);\n            _useEventsState = useEventsState(), setEvents = _useEventsState.setEvents;\n            setEvents(events); // console.log(\"events\", events);\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            setApiState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                data: {},\n                error: _context.t0,\n                isLoading: false,\n                hasError: true\n              });\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function getEventsAndAttendanceForEvents(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var useAttendanceAndEvents = function useAttendanceAndEvents() {\n  var _useState = useState({\n    isLoading: false,\n    hasError: false,\n    errorMessage: \"\" // events: []\n\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      apiState = _useState2[0],\n      setApiState = _useState2[1];\n\n  useEffect(function () {\n    getEventsAndAttendanceForEvents(setApiState);\n  }, []);\n\n  var _useEventsState2 = useEventsState(),\n      events = _useEventsState2.events;\n\n  return _objectSpread({}, apiState, {\n    events: events\n  });\n};","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/dashboard/DashboardRequests.tsx"],"names":["useEffect","useState","getEvents","useEventsState","getEventsAndAttendanceForEvents","setApiState","prevState","isLoading","events","console","log","setEvents","data","error","hasError","useAttendanceAndEvents","errorMessage","apiState"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,SAASC,cAAT,QAA+B,6BAA/B;;AASA,IAAMC,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,WAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtCA,YAAAA,WAAW,CAAC,UAACC,SAAD;AAAA,uCACPA,SADO;AAEVC,gBAAAA,SAAS,EAAE;AAFD;AAAA,aAAD,CAAX;AADsC;AAAA;AAAA,mBAOfL,SAAS,EAPM;;AAAA;AAO9BM,YAAAA,MAP8B;AAQpCC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B,EARoC,CASpC;;AACAH,YAAAA,WAAW,CAAC,UAACC,SAAD;AAAA,uCACPA,SADO;AAEVC,gBAAAA,SAAS,EAAE,KAFD,CAGV;AACA;;AAJU;AAAA,aAAD,CAAX;AAMAE,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,MAApB;AAhBoC,8BAiBdL,cAAc,EAjBA,EAiB5BQ,SAjB4B,mBAiB5BA,SAjB4B;AAkBpCA,YAAAA,SAAS,CAACH,MAAD,CAAT,CAlBoC,CAmBpC;;AAnBoC;AAAA;;AAAA;AAAA;AAAA;AAqBpCH,YAAAA,WAAW,CAAC,UAACC,SAAD;AAAA,uCACPA,SADO;AAEVM,gBAAAA,IAAI,EAAE,EAFI;AAGVC,gBAAAA,KAAK,aAHK;AAIVN,gBAAAA,SAAS,EAAE,KAJD;AAKVO,gBAAAA,QAAQ,EAAE;AALA;AAAA,aAAD,CAAX;;AArBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA/BV,+BAA+B;AAAA;AAAA;AAAA,GAArC;;AA+BA,OAAO,IAAMW,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AAAA,kBACVd,QAAQ,CAAC;AACvCM,IAAAA,SAAS,EAAE,KAD4B;AAEvCO,IAAAA,QAAQ,EAAE,KAF6B;AAGvCE,IAAAA,YAAY,EAAE,EAHyB,CAIvC;;AAJuC,GAAD,CADE;AAAA;AAAA,MACnCC,QADmC;AAAA,MACzBZ,WADyB;;AAO1CL,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,+BAA+B,CAACC,WAAD,CAA/B;AACD,GAFQ,EAEN,EAFM,CAAT;;AAP0C,yBAWvBF,cAAc,EAXS;AAAA,MAWlCK,MAXkC,oBAWlCA,MAXkC;;AAa1C,2BAAYS,QAAZ;AAAsBT,IAAAA,MAAM,EAANA;AAAtB;AACD,CAdM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getEvents } from \"../../requests/eventRequest\";\nimport { getAttendanceForEvents } from \"../../requests/attendanceRequest\";\nimport { useEventsState } from \"../../context/eventsContext\";\n\ntype ApiState = {\n  isLoading: boolean;\n  hasError: boolean;\n  errorMessage: string;\n  events: Array<any>;\n};\n\nconst getEventsAndAttendanceForEvents = async (setApiState: any) => {\n  setApiState((prevState: ApiState) => ({\n    ...prevState,\n    isLoading: true\n  }));\n\n  try {\n    const events = await getEvents();\n    console.log(\"first events\", events);\n    // const attendance = await getAttendanceForEvents(eventIds);\n    setApiState((prevState: ApiState) => ({\n      ...prevState,\n      isLoading: false\n      // events\n      // attendance\n    }));\n    console.log(\"post\", events);\n    const { setEvents } = useEventsState();\n    setEvents(events);\n    // console.log(\"events\", events);\n  } catch (err) {\n    setApiState((prevState: ApiState) => ({\n      ...prevState,\n      data: {},\n      error: err,\n      isLoading: false,\n      hasError: true\n    }));\n  }\n};\n\nexport const useAttendanceAndEvents = () => {\n  const [apiState, setApiState] = useState({\n    isLoading: false,\n    hasError: false,\n    errorMessage: \"\"\n    // events: []\n  });\n  useEffect(() => {\n    getEventsAndAttendanceForEvents(setApiState);\n  }, []);\n\n  const { events } = useEventsState();\n\n  return { ...apiState, events };\n};\n"]},"metadata":{},"sourceType":"module"}