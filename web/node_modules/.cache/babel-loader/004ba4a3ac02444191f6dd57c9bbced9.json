{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/components/AttendanceHistoryResults.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          display: grid;\\n          grid-template-columns: 1fr 1fr;\\n          grid-column-gap: 20px;\\n          grid-row-gap: 20px;\\n          grid-auto-rows: 1fr;\\n          padding: 20px;\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { getAttendanceRateForPreviousAttendees, getPredictedAttendanceFromMembersWithHistory, getPredictedAttendanceCount, getFirstTimeAttendeeRate } from \"features/attendancePredictor/attendancePredictorUtils\";\nimport { Card } from \"reactstrap\";\n\nvar getPercentage = function getPercentage(decimal) {\n  return \"\".concat(Math.round(decimal * 100), \"%\");\n};\n\nvar AttendanceHistoryResults = function AttendanceHistoryResults(_ref) {\n  var attendanceHistory = _ref.attendanceHistory,\n      attendeeIds = _ref.attendeeIds;\n  var membersWitHistoryRate = getAttendanceRateForPreviousAttendees(attendanceHistory);\n  var predictedAttendanceForMembersWithHistory = getPredictedAttendanceFromMembersWithHistory(attendanceHistory);\n  var firstTimeAttendeeRate = getFirstTimeAttendeeRate(attendanceHistory);\n  var predictedAttendanceCount = getPredictedAttendanceCount(attendanceHistory, attendeeIds);\n  var attendeesWithHistory = attendanceHistory.memberAttendanceHistory.length;\n  var attendeesWithoutHistory = attendeeIds.length - attendeesWithHistory;\n  return jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Expected Attendance\"), jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, predictedAttendanceCount)), jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"RSVPs\"), jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, attendeeIds.length)), jsx(\"div\", {\n    css: css(_templateObject()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, attendeesWithHistory), jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" have attended an event\")), jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, attendeesWithoutHistory), jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"have not attended an event\")), jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, Math.round(predictedAttendanceForMembersWithHistory)), jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Expected Members to Show Up Based on Previous Attendance of each Individual\")), jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, getPercentage(firstTimeAttendeeRate)), jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Average Attendance Rate\"))));\n};\n\nexport default AttendanceHistoryResults;","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/features/attendancePredictor/components/AttendanceHistoryResults.tsx"],"names":["css","jsx","getAttendanceRateForPreviousAttendees","getPredictedAttendanceFromMembersWithHistory","getPredictedAttendanceCount","getFirstTimeAttendeeRate","Card","getPercentage","decimal","Math","round","AttendanceHistoryResults","attendanceHistory","attendeeIds","membersWitHistoryRate","predictedAttendanceForMembersWithHistory","firstTimeAttendeeRate","predictedAttendanceCount","attendeesWithHistory","memberAttendanceHistory","length","attendeesWithoutHistory"],"mappings":";;;;;;;;;;;;;AACA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AAEA,SACEC,qCADF,EAEEC,4CAFF,EAGEC,2BAHF,EAIEC,wBAJF,QAKO,uDALP;AAMA,SAASC,IAAT,QAAqB,YAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAA6B;AACjD,mBAAUC,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,GAArB,CAAV;AACD,CAFD;;AAIA,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,OAM3B;AAAA,MALJC,iBAKI,QALJA,iBAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AACJ,MAAMC,qBAAqB,GAAGZ,qCAAqC,CACjEU,iBADiE,CAAnE;AAIA,MAAMG,wCAAwC,GAAGZ,4CAA4C,CAC3FS,iBAD2F,CAA7F;AAIA,MAAMI,qBAAqB,GAAGX,wBAAwB,CAACO,iBAAD,CAAtD;AACA,MAAMK,wBAAwB,GAAGb,2BAA2B,CAC1DQ,iBAD0D,EAE1DC,WAF0D,CAA5D;AAIA,MAAMK,oBAAoB,GAAGN,iBAAiB,CAACO,uBAAlB,CAA0CC,MAAvE;AACA,MAAMC,uBAAuB,GAAGR,WAAW,CAACO,MAAZ,GAAqBF,oBAArD;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,wBAAL,CAFF,CADF,EAKE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,WAAW,CAACO,MAAjB,CAFF,CALF,EASE;AACE,IAAA,GAAG,EAAEpB,GAAF,mBADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKkB,oBAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CAVF,EAcE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,uBAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CAdF,EAkBE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAI,CAACC,KAAL,CAAWK,wCAAX,CAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAFF,CAlBF,EAyBE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,aAAa,CAACS,qBAAD,CAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CAzBF,CATF,CADF;AA0CD,CAhED;;AAkEA,eAAeL,wBAAf","sourcesContent":["import React from \"react\";\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { AttendanceHistory } from \"requests/attendanceHistoryTypes\";\nimport {\n  getAttendanceRateForPreviousAttendees,\n  getPredictedAttendanceFromMembersWithHistory,\n  getPredictedAttendanceCount,\n  getFirstTimeAttendeeRate\n} from \"features/attendancePredictor/attendancePredictorUtils\";\nimport { Card } from \"reactstrap\";\n\nconst getPercentage = (decimal: number): string => {\n  return `${Math.round(decimal * 100)}%`;\n};\n\nconst AttendanceHistoryResults = ({\n  attendanceHistory,\n  attendeeIds\n}: {\n  attendanceHistory: AttendanceHistory;\n  attendeeIds: string[];\n}) => {\n  const membersWitHistoryRate = getAttendanceRateForPreviousAttendees(\n    attendanceHistory\n  );\n\n  const predictedAttendanceForMembersWithHistory = getPredictedAttendanceFromMembersWithHistory(\n    attendanceHistory\n  );\n\n  const firstTimeAttendeeRate = getFirstTimeAttendeeRate(attendanceHistory);\n  const predictedAttendanceCount = getPredictedAttendanceCount(\n    attendanceHistory,\n    attendeeIds\n  );\n  const attendeesWithHistory = attendanceHistory.memberAttendanceHistory.length;\n  const attendeesWithoutHistory = attendeeIds.length - attendeesWithHistory;\n  return (\n    <div>\n      <Card>\n        <h3>Expected Attendance</h3>\n        <h2>{predictedAttendanceCount}</h2>\n      </Card>\n      <Card>\n        <h3>RSVPs</h3>\n        <h2>{attendeeIds.length}</h2>\n      </Card>\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          grid-column-gap: 20px;\n          grid-row-gap: 20px;\n          grid-auto-rows: 1fr;\n          padding: 20px;\n        `}\n      >\n        <Card>\n          <h2>{attendeesWithHistory}</h2>\n          <p> have attended an event</p>\n        </Card>\n        <Card>\n          <h2>{attendeesWithoutHistory}</h2>\n          <p>have not attended an event</p>\n        </Card>\n        <Card>\n          <h2>{Math.round(predictedAttendanceForMembersWithHistory)}</h2>\n          <p>\n            Expected Members to Show Up Based on Previous Attendance of each\n            Individual\n          </p>\n        </Card>\n        <Card>\n          <h2>{getPercentage(firstTimeAttendeeRate)}</h2>\n          <p>Average Attendance Rate</p>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default AttendanceHistoryResults;\n"]},"metadata":{},"sourceType":"module"}