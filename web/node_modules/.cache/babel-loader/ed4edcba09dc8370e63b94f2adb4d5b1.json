{"ast":null,"code":"import _slicedToArray from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from \"react\";\nimport { getEvents } from \"../requests/eventRequest\";\nimport { useEventsState } from \"../context/eventsContext\";\n\nvar loadEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(setApiState, setEvents) {\n    var events;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setApiState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                isLoading: true\n              });\n            });\n            _context.prev = 1;\n            _context.next = 4;\n            return getEvents();\n\n          case 4:\n            events = _context.sent;\n            setEvents(events);\n            setApiState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                isLoading: false,\n                events: events\n              });\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setApiState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                data: {},\n                error: _context.t0,\n                isLoading: false,\n                hasError: true\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function loadEvents(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var useEventsCall = function useEventsCall() {\n  var _useState = useState({\n    isLoading: false,\n    hasError: false,\n    errorMessage: \"\",\n    events: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      apiState = _useState2[0],\n      setApiState = _useState2[1];\n\n  var _useEventsState = useEventsState(),\n      setEvents = _useEventsState.setEvents;\n\n  useEffect(function () {\n    loadEvents(setApiState, setEvents);\n  }, []);\n  return _objectSpread({}, apiState);\n};","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/context/eventsHook.tsx"],"names":["useEffect","useState","getEvents","useEventsState","loadEvents","setApiState","setEvents","prevState","isLoading","events","data","error","hasError","useEventsCall","errorMessage","apiState"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AASA,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,WAAP,EAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBD,YAAAA,WAAW,CAAC,UAACE,SAAD;AAAA,uCACPA,SADO;AAEVC,gBAAAA,SAAS,EAAE;AAFD;AAAA,aAAD,CAAX;AADiB;AAAA;AAAA,mBAOMN,SAAS,EAPf;;AAAA;AAOTO,YAAAA,MAPS;AAQfH,YAAAA,SAAS,CAACG,MAAD,CAAT;AACAJ,YAAAA,WAAW,CAAC,UAACE,SAAD;AAAA,uCACPA,SADO;AAEVC,gBAAAA,SAAS,EAAE,KAFD;AAGVC,gBAAAA,MAAM,EAANA;AAHU;AAAA,aAAD,CAAX;AATe;AAAA;;AAAA;AAAA;AAAA;AAefJ,YAAAA,WAAW,CAAC,UAACE,SAAD;AAAA,uCACPA,SADO;AAEVG,gBAAAA,IAAI,EAAE,EAFI;AAGVC,gBAAAA,KAAK,aAHK;AAIVH,gBAAAA,SAAS,EAAE,KAJD;AAKVI,gBAAAA,QAAQ,EAAE;AALA;AAAA,aAAD,CAAX;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVR,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAyBA,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACDZ,QAAQ,CAAC;AACvCO,IAAAA,SAAS,EAAE,KAD4B;AAEvCI,IAAAA,QAAQ,EAAE,KAF6B;AAGvCE,IAAAA,YAAY,EAAE,EAHyB;AAIvCL,IAAAA,MAAM,EAAE;AAJ+B,GAAD,CADP;AAAA;AAAA,MAC1BM,QAD0B;AAAA,MAChBV,WADgB;;AAAA,wBAQXF,cAAc,EARH;AAAA,MAQzBG,SARyB,mBAQzBA,SARyB;;AASjCN,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,UAAU,CAACC,WAAD,EAAcC,SAAd,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,2BAAYS,QAAZ;AACD,CAdM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getEvents } from \"../requests/eventRequest\";\nimport { useEventsState } from \"../context/eventsContext\";\n\ntype ApiState = {\n  isLoading: boolean;\n  hasError: boolean;\n  errorMessage: string;\n  events: Array<any>;\n};\n\nconst loadEvents = async (setApiState: any, setEvents: any) => {\n  setApiState((prevState: ApiState) => ({\n    ...prevState,\n    isLoading: true\n  }));\n\n  try {\n    const events = await getEvents();\n    setEvents(events);\n    setApiState((prevState: ApiState) => ({\n      ...prevState,\n      isLoading: false,\n      events\n    }));\n  } catch (err) {\n    setApiState((prevState: ApiState) => ({\n      ...prevState,\n      data: {},\n      error: err,\n      isLoading: false,\n      hasError: true\n    }));\n  }\n};\n\nexport const useEventsCall = () => {\n  const [apiState, setApiState] = useState({\n    isLoading: false,\n    hasError: false,\n    errorMessage: \"\",\n    events: []\n  });\n\n  const { setEvents } = useEventsState();\n  useEffect(() => {\n    loadEvents(setApiState, setEvents);\n  }, []);\n\n  return { ...apiState };\n};\n"]},"metadata":{},"sourceType":"module"}