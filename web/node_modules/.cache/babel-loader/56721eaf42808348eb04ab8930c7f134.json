{"ast":null,"code":"import _regeneratorRuntime from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/king/playground/meetup-analyzer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var getAttendanceHistoryForUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var userIds, data, dataJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userIds = _ref.userIds;\n            _context.next = 3;\n            return fetch(\"http://localhost:5000/event/prediction\", {\n              method: \"POST\",\n              mode: \"no-cors\",\n              body: JSON.stringify(userIds)\n            });\n\n          case 3:\n            data = _context.sent;\n            _context.next = 6;\n            return data.json();\n\n          case 6:\n            dataJson = _context.sent;\n            return _context.abrupt(\"return\", dataJson.data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAttendanceHistoryForUsers(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/king/playground/meetup-analyzer/src/requests/attendanceHistoryRequest.ts"],"names":["getAttendanceHistoryForUsers","userIds","fetch","method","mode","body","JSON","stringify","data","json","dataJson"],"mappings":";;AAAA,OAAO,IAAMA,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CC,YAAAA,OAD0C,QAC1CA,OAD0C;AAAA;AAAA,mBAKvBC,KAAK,CAAC,wCAAD,EAA2C;AACjEC,cAAAA,MAAM,EAAE,MADyD;AAEjEC,cAAAA,IAAI,EAAE,SAF2D;AAGjEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAH2D,aAA3C,CALkB;;AAAA;AAKpCO,YAAAA,IALoC;AAAA;AAAA,mBAUnBA,IAAI,CAACC,IAAL,EAVmB;;AAAA;AAUpCC,YAAAA,QAVoC;AAAA,6CAWnCA,QAAQ,CAACF,IAX0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA5BR,4BAA4B;AAAA;AAAA;AAAA,GAAlC","sourcesContent":["export const getAttendanceHistoryForUsers = async ({\n  userIds\n}: {\n  userIds: string[];\n}) => {\n  const data = await fetch(\"http://localhost:5000/event/prediction\", {\n    method: \"POST\",\n    mode: \"no-cors\",\n    body: JSON.stringify(userIds)\n  });\n  const dataJson = await data.json();\n  return dataJson.data;\n};\n"]},"metadata":{},"sourceType":"module"}